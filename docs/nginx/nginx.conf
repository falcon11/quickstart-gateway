#### 全局块 开始 ####
# 配置允许运行Nginx服务器的用户和用户组
user  nobody  nobody;
# 配置允许 Nginx 进程生成的 worker process 数
worker_processes  3;
# 配置Nginx服务器运行的错误日志存放路径
error_log  logs/error.log;
# 配置 Nginx 服务器运行时的 pid文件存放路径和名称
pid  logs/nginx.pid;
#### 全局块 结束 ####

#### events 块 开始 ####
events {
    # 配置事件驱动模型
    use epoll;
    # 配置最大连接数
    worker_connections  1024;
}
#### events 块 结束 ####

#### http 块 开始 ####
http {
    # 定义 MIME-Type
    include       mime.types;
    default_type  application/octet-stream;
    # 配置允许使用sendfile方式传输
    sendfile        on;
    # 配置连接超时时间
    keepalive_timeout  65;
    # 配置请求处理日志的格式
    log_format  access.log  '$remote_addr-[$time_local]-"$request"-"$http_user_agent"';

    #### sever 块 开始 ####
    # 配置虚拟主机 myServer1
    server {
        # 配置监听端口和主机名称（基于名称）
        listen       8081;
        server_name  myServer1;
        # 配置请求处理日志存放路径
        access_log  /myweb/server1/log/access.log;
        # 配置错误页面
        error_page  404              /404.html;
        # 配置处理/server1/location1请求的 location
        location /server1/location1 {
            root   /myweb;
            index  index.svr1-loc1.htm;
        }

        # 配置处理/server1/location2请求的 location
        location /server1/location2 {
            root  /myweb;
            index  index.svr1-loc2.htm;
        }
    }


    # 配置虚拟主机 myServer2
    server {
        # 配置监听端口和主机名称（基于名称）
        listen       8082;
        server_name  192.168.1.3;
        # 配置请求处理日志存放路径
        access_log  /myweb/server2/log/access.log;
        # 配置错误页面，对错误页面 404.html做了定向配置
        error_page  404              /404.html;
        # 配置处理/server2/location1请求的 location
        location /server2/location1 {
            root   /myweb;
            index  index.svr2-loc1.htm;
        }

        # 配置处理/svr2/loc2请求的 location
        location /svr2/loc2 {
            # 对 location的 URI进行更改
            alias  /myweb/server2/location2;
            index  index.svr2-loc2.htm;
        }

        # 配置错误页面转向
        location = /404.html {
            root  /myweb/;
            index  404.html;
        }
    }
    #### sever 块 结束 ####
}
#### http 块 结束 ####